// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "ESIEESPACE Network",
            "url": "http://esieespace.fr",
            "email": "contact@esieespace.fr"
        },
        "license": {
            "name": "GPL-3.0",
            "url": "https://github.com/SpaceRouter/authentication_server/blob/louis/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "get Ok",
                "produces": [
                    "text/plain"
                ],
                "summary": "Check server health",
                "operationId": "status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Get authentication token with login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get authentication token",
                "operationId": "authenticate",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "UserLogin",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/forms.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/forms.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserLoginResponse"
                        }
                    },
                    "401": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserLoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserLoginResponse"
                        }
                    }
                }
            }
        },
        "/v1/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get connected user information",
                "produces": [
                    "application/json"
                ],
                "summary": "Get user info",
                "operationId": "get_info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/forms.UserInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserInfoResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserInfoResponse"
                        }
                    }
                }
            }
        },
        "/v1/permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get connected user permissions",
                "produces": [
                    "application/json"
                ],
                "summary": "Get user permissions",
                "operationId": "get_permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/forms.UserPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserPermissionsResponse"
                        }
                    },
                    "401": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserPermissionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserPermissionsResponse"
                        }
                    }
                }
            }
        },
        "/v1/role": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get connected user role",
                "produces": [
                    "application/json"
                ],
                "summary": "Get user role",
                "operationId": "get_role",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/forms.UserRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserRolesResponse"
                        }
                    },
                    "401": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserRolesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserRolesResponse"
                        }
                    }
                }
            }
        },
        "/v1/update_password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "": []
                    }
                ],
                "description": "Update user password using username and new password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Change user password",
                "operationId": "update_password",
                "parameters": [
                    {
                        "description": "User password change",
                        "name": "UserLogin",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/forms.UserChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/forms.UserChangesResponse"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserChangesResponse"
                        }
                    },
                    "401": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserChangesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserChangesResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/{username}/permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get connected user permissions",
                "produces": [
                    "application/json"
                ],
                "summary": "Get user permissions",
                "operationId": "get_permissions2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/forms.UserPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserPermissionsResponse"
                        }
                    },
                    "401": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserPermissionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserPermissionsResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/{username}/role": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get connected user role",
                "produces": [
                    "application/json"
                ],
                "summary": "Get user role",
                "operationId": "get_roles2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/forms.UserRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserRolesResponse"
                        }
                    },
                    "401": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserRolesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/forms.UserRolesResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "forms.UserChangePassword": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "forms.UserChangesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "forms.UserInfoResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                },
                "userInfo": {
                    "$ref": "#/definitions/models.UserInfo"
                }
            }
        },
        "forms.UserLogin": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "forms.UserLoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "forms.UserPermissionsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "forms.UserRolesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "models.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "SpaceRouter Authentication Server",
	Description: "Authentication Server API.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
